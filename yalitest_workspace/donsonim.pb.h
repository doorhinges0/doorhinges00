// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: donsonim.proto

#ifndef PROTOBUF_donsonim_2eproto__INCLUDED
#define PROTOBUF_donsonim_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace donson {
namespace im {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_donsonim_2eproto();
void protobuf_AssignDesc_donsonim_2eproto();
void protobuf_ShutdownFile_donsonim_2eproto();

class ReqHeader;
class RspHeader;
class ReqLogin;
class RspLogin;
class ReqHeartBeat;
class RspHeartBeat;
class ReqReLogin;
class RspReLogin;
class RichMsg;
class Msg;
class ReqUpMsg;
class RspUpMsg;
class PushMsg;
class ReqPushMsgAck;
class ReqUpGrpMsg;
class RspUpGrpMsg;
class PushGrpMsg;
class ReqPushGrpMsgAck;
class ReqOfflineMsg;
class RspOfflineMsg;
class ReqNotice;
class RspNotice;
class ReqNoticeAck;
class ReqCheckGrpMsg;
class GrpInfo;
class RspCheckGrpMsg;
class ReqGetGrpMsg;
class RspGetGrpMsg;

enum Cmd {
  CMD_BEGIN = 0,
  CMD_LOGIN = 1,
  CMD_RELOGIN = 2,
  CMD_HEARTBEAT = 3,
  CMD_UPMSG = 4,
  CMD_PUSHMSG = 5,
  CMD_PUSHMSGACK = 6,
  CMD_UPGRPMSG = 7,
  CMD_PUSHGRPMSG = 8,
  CMD_PUSHGRPMSGACK = 9,
  CMD_OFFLINEMSG = 10,
  CMD_CHECKGRPMSG = 11,
  CMD_GETGRPMSG = 12,
  CMD_NOTICE = 13,
  CMD_NOTICEACK = 14
};
bool Cmd_IsValid(int value);
const Cmd Cmd_MIN = CMD_BEGIN;
const Cmd Cmd_MAX = CMD_NOTICEACK;
const int Cmd_ARRAYSIZE = Cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* Cmd_descriptor();
inline const ::std::string& Cmd_Name(Cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    Cmd_descriptor(), value);
}
inline bool Cmd_Parse(
    const ::std::string& name, Cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Cmd>(
    Cmd_descriptor(), name, value);
}
enum MsgType {
  Msg_Text = 0,
  Msg_Pic = 1,
  Msg_Audio = 2,
  Msg_File = 3,
  Msg_Notice = 4,
  Msg_Offline = 5
};
bool MsgType_IsValid(int value);
const MsgType MsgType_MIN = Msg_Text;
const MsgType MsgType_MAX = Msg_Offline;
const int MsgType_ARRAYSIZE = MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgType_descriptor();
inline const ::std::string& MsgType_Name(MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgType_descriptor(), value);
}
inline bool MsgType_Parse(
    const ::std::string& name, MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgType>(
    MsgType_descriptor(), name, value);
}
// ===================================================================

class ReqHeader : public ::google::protobuf::Message {
 public:
  ReqHeader();
  virtual ~ReqHeader();
  
  ReqHeader(const ReqHeader& from);
  
  inline ReqHeader& operator=(const ReqHeader& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqHeader& default_instance();
  
  void Swap(ReqHeader* other);
  
  // implements Message ----------------------------------------------
  
  ReqHeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqHeader& from);
  void MergeFrom(const ReqHeader& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uin = 1 [default = 0];
  inline bool has_uin() const;
  inline void clear_uin();
  static const int kUinFieldNumber = 1;
  inline ::google::protobuf::uint32 uin() const;
  inline void set_uin(::google::protobuf::uint32 value);
  
  // required uint32 appid = 2 [default = 0];
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 2;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);
  
  // required uint32 seq = 3 [default = 0];
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 3;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);
  
  // required uint32 ver = 4 [default = 0];
  inline bool has_ver() const;
  inline void clear_ver();
  static const int kVerFieldNumber = 4;
  inline ::google::protobuf::uint32 ver() const;
  inline void set_ver(::google::protobuf::uint32 value);
  
  // required .donson.im.Cmd cmd = 5 [default = CMD_BEGIN];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 5;
  inline donson::im::Cmd cmd() const;
  inline void set_cmd(donson::im::Cmd value);
  
  // @@protoc_insertion_point(class_scope:donson.im.ReqHeader)
 private:
  inline void set_has_uin();
  inline void clear_has_uin();
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_ver();
  inline void clear_has_ver();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uin_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 seq_;
  ::google::protobuf::uint32 ver_;
  int cmd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static ReqHeader* default_instance_;
};
// -------------------------------------------------------------------

class RspHeader : public ::google::protobuf::Message {
 public:
  RspHeader();
  virtual ~RspHeader();
  
  RspHeader(const RspHeader& from);
  
  inline RspHeader& operator=(const RspHeader& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspHeader& default_instance();
  
  void Swap(RspHeader* other);
  
  // implements Message ----------------------------------------------
  
  RspHeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspHeader& from);
  void MergeFrom(const RspHeader& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // required string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  
  // required uint32 seq = 3;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 3;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);
  
  // optional string reserved = 4;
  inline bool has_reserved() const;
  inline void clear_reserved();
  static const int kReservedFieldNumber = 4;
  inline const ::std::string& reserved() const;
  inline void set_reserved(const ::std::string& value);
  inline void set_reserved(const char* value);
  inline void set_reserved(const char* value, size_t size);
  inline ::std::string* mutable_reserved();
  inline ::std::string* release_reserved();
  
  // required .donson.im.Cmd cmd = 5;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 5;
  inline donson::im::Cmd cmd() const;
  inline void set_cmd(donson::im::Cmd value);
  
  // required uint32 isPush = 6 [default = 0];
  inline bool has_ispush() const;
  inline void clear_ispush();
  static const int kIsPushFieldNumber = 6;
  inline ::google::protobuf::uint32 ispush() const;
  inline void set_ispush(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.RspHeader)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_reserved();
  inline void clear_has_reserved();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_ispush();
  inline void clear_has_ispush();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* message_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 seq_;
  ::std::string* reserved_;
  int cmd_;
  ::google::protobuf::uint32 ispush_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static RspHeader* default_instance_;
};
// -------------------------------------------------------------------

class ReqLogin : public ::google::protobuf::Message {
 public:
  ReqLogin();
  virtual ~ReqLogin();
  
  ReqLogin(const ReqLogin& from);
  
  inline ReqLogin& operator=(const ReqLogin& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLogin& default_instance();
  
  void Swap(ReqLogin* other);
  
  // implements Message ----------------------------------------------
  
  ReqLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLogin& from);
  void MergeFrom(const ReqLogin& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string username = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  
  // required string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  
  // required string devicetoken = 3;
  inline bool has_devicetoken() const;
  inline void clear_devicetoken();
  static const int kDevicetokenFieldNumber = 3;
  inline const ::std::string& devicetoken() const;
  inline void set_devicetoken(const ::std::string& value);
  inline void set_devicetoken(const char* value);
  inline void set_devicetoken(const char* value, size_t size);
  inline ::std::string* mutable_devicetoken();
  inline ::std::string* release_devicetoken();
  
  // required uint32 devicetype = 4;
  inline bool has_devicetype() const;
  inline void clear_devicetype();
  static const int kDevicetypeFieldNumber = 4;
  inline ::google::protobuf::uint32 devicetype() const;
  inline void set_devicetype(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.ReqLogin)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_devicetoken();
  inline void clear_has_devicetoken();
  inline void set_has_devicetype();
  inline void clear_has_devicetype();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* username_;
  ::std::string* password_;
  ::std::string* devicetoken_;
  ::google::protobuf::uint32 devicetype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static ReqLogin* default_instance_;
};
// -------------------------------------------------------------------

class RspLogin : public ::google::protobuf::Message {
 public:
  RspLogin();
  virtual ~RspLogin();
  
  RspLogin(const RspLogin& from);
  
  inline RspLogin& operator=(const RspLogin& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspLogin& default_instance();
  
  void Swap(RspLogin* other);
  
  // implements Message ----------------------------------------------
  
  RspLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspLogin& from);
  void MergeFrom(const RspLogin& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string token = 1;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 1;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  
  // optional string apiresponse = 2;
  inline bool has_apiresponse() const;
  inline void clear_apiresponse();
  static const int kApiresponseFieldNumber = 2;
  inline const ::std::string& apiresponse() const;
  inline void set_apiresponse(const ::std::string& value);
  inline void set_apiresponse(const char* value);
  inline void set_apiresponse(const char* value, size_t size);
  inline ::std::string* mutable_apiresponse();
  inline ::std::string* release_apiresponse();
  
  // optional .donson.im.RspOfflineMsg msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::donson::im::RspOfflineMsg& msg() const;
  inline ::donson::im::RspOfflineMsg* mutable_msg();
  inline ::donson::im::RspOfflineMsg* release_msg();
  
  // @@protoc_insertion_point(class_scope:donson.im.RspLogin)
 private:
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_apiresponse();
  inline void clear_has_apiresponse();
  inline void set_has_msg();
  inline void clear_has_msg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* token_;
  ::std::string* apiresponse_;
  ::donson::im::RspOfflineMsg* msg_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static RspLogin* default_instance_;
};
// -------------------------------------------------------------------

class ReqHeartBeat : public ::google::protobuf::Message {
 public:
  ReqHeartBeat();
  virtual ~ReqHeartBeat();
  
  ReqHeartBeat(const ReqHeartBeat& from);
  
  inline ReqHeartBeat& operator=(const ReqHeartBeat& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqHeartBeat& default_instance();
  
  void Swap(ReqHeartBeat* other);
  
  // implements Message ----------------------------------------------
  
  ReqHeartBeat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqHeartBeat& from);
  void MergeFrom(const ReqHeartBeat& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string token = 1;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 1;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  
  // @@protoc_insertion_point(class_scope:donson.im.ReqHeartBeat)
 private:
  inline void set_has_token();
  inline void clear_has_token();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* token_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static ReqHeartBeat* default_instance_;
};
// -------------------------------------------------------------------

class RspHeartBeat : public ::google::protobuf::Message {
 public:
  RspHeartBeat();
  virtual ~RspHeartBeat();
  
  RspHeartBeat(const RspHeartBeat& from);
  
  inline RspHeartBeat& operator=(const RspHeartBeat& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspHeartBeat& default_instance();
  
  void Swap(RspHeartBeat* other);
  
  // implements Message ----------------------------------------------
  
  RspHeartBeat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspHeartBeat& from);
  void MergeFrom(const RspHeartBeat& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string token = 1;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 1;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  
  // @@protoc_insertion_point(class_scope:donson.im.RspHeartBeat)
 private:
  inline void set_has_token();
  inline void clear_has_token();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* token_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static RspHeartBeat* default_instance_;
};
// -------------------------------------------------------------------

class ReqReLogin : public ::google::protobuf::Message {
 public:
  ReqReLogin();
  virtual ~ReqReLogin();
  
  ReqReLogin(const ReqReLogin& from);
  
  inline ReqReLogin& operator=(const ReqReLogin& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqReLogin& default_instance();
  
  void Swap(ReqReLogin* other);
  
  // implements Message ----------------------------------------------
  
  ReqReLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqReLogin& from);
  void MergeFrom(const ReqReLogin& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string token = 1;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 1;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  
  // @@protoc_insertion_point(class_scope:donson.im.ReqReLogin)
 private:
  inline void set_has_token();
  inline void clear_has_token();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* token_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static ReqReLogin* default_instance_;
};
// -------------------------------------------------------------------

class RspReLogin : public ::google::protobuf::Message {
 public:
  RspReLogin();
  virtual ~RspReLogin();
  
  RspReLogin(const RspReLogin& from);
  
  inline RspReLogin& operator=(const RspReLogin& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspReLogin& default_instance();
  
  void Swap(RspReLogin* other);
  
  // implements Message ----------------------------------------------
  
  RspReLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspReLogin& from);
  void MergeFrom(const RspReLogin& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string token = 1;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 1;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  
  // @@protoc_insertion_point(class_scope:donson.im.RspReLogin)
 private:
  inline void set_has_token();
  inline void clear_has_token();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* token_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static RspReLogin* default_instance_;
};
// -------------------------------------------------------------------

class RichMsg : public ::google::protobuf::Message {
 public:
  RichMsg();
  virtual ~RichMsg();
  
  RichMsg(const RichMsg& from);
  
  inline RichMsg& operator=(const RichMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RichMsg& default_instance();
  
  void Swap(RichMsg* other);
  
  // implements Message ----------------------------------------------
  
  RichMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RichMsg& from);
  void MergeFrom(const RichMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .donson.im.MsgType type = 1 [default = Msg_Text];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline donson::im::MsgType type() const;
  inline void set_type(donson::im::MsgType value);
  
  // required string msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  
  // @@protoc_insertion_point(class_scope:donson.im.RichMsg)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_msg();
  inline void clear_has_msg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* msg_;
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static RichMsg* default_instance_;
};
// -------------------------------------------------------------------

class Msg : public ::google::protobuf::Message {
 public:
  Msg();
  virtual ~Msg();
  
  Msg(const Msg& from);
  
  inline Msg& operator=(const Msg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg& default_instance();
  
  void Swap(Msg* other);
  
  // implements Message ----------------------------------------------
  
  Msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg& from);
  void MergeFrom(const Msg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .donson.im.RichMsg messages = 1;
  inline int messages_size() const;
  inline void clear_messages();
  static const int kMessagesFieldNumber = 1;
  inline const ::donson::im::RichMsg& messages(int index) const;
  inline ::donson::im::RichMsg* mutable_messages(int index);
  inline ::donson::im::RichMsg* add_messages();
  inline const ::google::protobuf::RepeatedPtrField< ::donson::im::RichMsg >&
      messages() const;
  inline ::google::protobuf::RepeatedPtrField< ::donson::im::RichMsg >*
      mutable_messages();
  
  // optional uint32 msgid = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);
  
  // optional uint32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.Msg)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::donson::im::RichMsg > messages_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static Msg* default_instance_;
};
// -------------------------------------------------------------------

class ReqUpMsg : public ::google::protobuf::Message {
 public:
  ReqUpMsg();
  virtual ~ReqUpMsg();
  
  ReqUpMsg(const ReqUpMsg& from);
  
  inline ReqUpMsg& operator=(const ReqUpMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqUpMsg& default_instance();
  
  void Swap(ReqUpMsg* other);
  
  // implements Message ----------------------------------------------
  
  ReqUpMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqUpMsg& from);
  void MergeFrom(const ReqUpMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 touin = 1;
  inline bool has_touin() const;
  inline void clear_touin();
  static const int kTouinFieldNumber = 1;
  inline ::google::protobuf::uint32 touin() const;
  inline void set_touin(::google::protobuf::uint32 value);
  
  // required .donson.im.Msg msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::donson::im::Msg& msg() const;
  inline ::donson::im::Msg* mutable_msg();
  inline ::donson::im::Msg* release_msg();
  
  // @@protoc_insertion_point(class_scope:donson.im.ReqUpMsg)
 private:
  inline void set_has_touin();
  inline void clear_has_touin();
  inline void set_has_msg();
  inline void clear_has_msg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::donson::im::Msg* msg_;
  ::google::protobuf::uint32 touin_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static ReqUpMsg* default_instance_;
};
// -------------------------------------------------------------------

class RspUpMsg : public ::google::protobuf::Message {
 public:
  RspUpMsg();
  virtual ~RspUpMsg();
  
  RspUpMsg(const RspUpMsg& from);
  
  inline RspUpMsg& operator=(const RspUpMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspUpMsg& default_instance();
  
  void Swap(RspUpMsg* other);
  
  // implements Message ----------------------------------------------
  
  RspUpMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspUpMsg& from);
  void MergeFrom(const RspUpMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 msgid = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);
  
  // required uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // required uint32 touin = 3;
  inline bool has_touin() const;
  inline void clear_touin();
  static const int kTouinFieldNumber = 3;
  inline ::google::protobuf::uint32 touin() const;
  inline void set_touin(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.RspUpMsg)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_touin();
  inline void clear_has_touin();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 touin_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static RspUpMsg* default_instance_;
};
// -------------------------------------------------------------------

class PushMsg : public ::google::protobuf::Message {
 public:
  PushMsg();
  virtual ~PushMsg();
  
  PushMsg(const PushMsg& from);
  
  inline PushMsg& operator=(const PushMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushMsg& default_instance();
  
  void Swap(PushMsg* other);
  
  // implements Message ----------------------------------------------
  
  PushMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushMsg& from);
  void MergeFrom(const PushMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fromuin = 1;
  inline bool has_fromuin() const;
  inline void clear_fromuin();
  static const int kFromuinFieldNumber = 1;
  inline ::google::protobuf::uint32 fromuin() const;
  inline void set_fromuin(::google::protobuf::uint32 value);
  
  // required .donson.im.Msg msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::donson::im::Msg& msg() const;
  inline ::donson::im::Msg* mutable_msg();
  inline ::donson::im::Msg* release_msg();
  
  // @@protoc_insertion_point(class_scope:donson.im.PushMsg)
 private:
  inline void set_has_fromuin();
  inline void clear_has_fromuin();
  inline void set_has_msg();
  inline void clear_has_msg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::donson::im::Msg* msg_;
  ::google::protobuf::uint32 fromuin_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static PushMsg* default_instance_;
};
// -------------------------------------------------------------------

class ReqPushMsgAck : public ::google::protobuf::Message {
 public:
  ReqPushMsgAck();
  virtual ~ReqPushMsgAck();
  
  ReqPushMsgAck(const ReqPushMsgAck& from);
  
  inline ReqPushMsgAck& operator=(const ReqPushMsgAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqPushMsgAck& default_instance();
  
  void Swap(ReqPushMsgAck* other);
  
  // implements Message ----------------------------------------------
  
  ReqPushMsgAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqPushMsgAck& from);
  void MergeFrom(const ReqPushMsgAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 fromuin = 1;
  inline bool has_fromuin() const;
  inline void clear_fromuin();
  static const int kFromuinFieldNumber = 1;
  inline ::google::protobuf::uint32 fromuin() const;
  inline void set_fromuin(::google::protobuf::uint32 value);
  
  // required uint32 msgid = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.ReqPushMsgAck)
 private:
  inline void set_has_fromuin();
  inline void clear_has_fromuin();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 fromuin_;
  ::google::protobuf::uint32 msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static ReqPushMsgAck* default_instance_;
};
// -------------------------------------------------------------------

class ReqUpGrpMsg : public ::google::protobuf::Message {
 public:
  ReqUpGrpMsg();
  virtual ~ReqUpGrpMsg();
  
  ReqUpGrpMsg(const ReqUpGrpMsg& from);
  
  inline ReqUpGrpMsg& operator=(const ReqUpGrpMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqUpGrpMsg& default_instance();
  
  void Swap(ReqUpGrpMsg* other);
  
  // implements Message ----------------------------------------------
  
  ReqUpGrpMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqUpGrpMsg& from);
  void MergeFrom(const ReqUpGrpMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 grpid = 1;
  inline bool has_grpid() const;
  inline void clear_grpid();
  static const int kGrpidFieldNumber = 1;
  inline ::google::protobuf::uint32 grpid() const;
  inline void set_grpid(::google::protobuf::uint32 value);
  
  // required .donson.im.Msg msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::donson::im::Msg& msg() const;
  inline ::donson::im::Msg* mutable_msg();
  inline ::donson::im::Msg* release_msg();
  
  // @@protoc_insertion_point(class_scope:donson.im.ReqUpGrpMsg)
 private:
  inline void set_has_grpid();
  inline void clear_has_grpid();
  inline void set_has_msg();
  inline void clear_has_msg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::donson::im::Msg* msg_;
  ::google::protobuf::uint32 grpid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static ReqUpGrpMsg* default_instance_;
};
// -------------------------------------------------------------------

class RspUpGrpMsg : public ::google::protobuf::Message {
 public:
  RspUpGrpMsg();
  virtual ~RspUpGrpMsg();
  
  RspUpGrpMsg(const RspUpGrpMsg& from);
  
  inline RspUpGrpMsg& operator=(const RspUpGrpMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspUpGrpMsg& default_instance();
  
  void Swap(RspUpGrpMsg* other);
  
  // implements Message ----------------------------------------------
  
  RspUpGrpMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspUpGrpMsg& from);
  void MergeFrom(const RspUpGrpMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 msgid = 1;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);
  
  // required uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // required uint32 grpid = 3;
  inline bool has_grpid() const;
  inline void clear_grpid();
  static const int kGrpidFieldNumber = 3;
  inline ::google::protobuf::uint32 grpid() const;
  inline void set_grpid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.RspUpGrpMsg)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_grpid();
  inline void clear_has_grpid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 grpid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static RspUpGrpMsg* default_instance_;
};
// -------------------------------------------------------------------

class PushGrpMsg : public ::google::protobuf::Message {
 public:
  PushGrpMsg();
  virtual ~PushGrpMsg();
  
  PushGrpMsg(const PushGrpMsg& from);
  
  inline PushGrpMsg& operator=(const PushGrpMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushGrpMsg& default_instance();
  
  void Swap(PushGrpMsg* other);
  
  // implements Message ----------------------------------------------
  
  PushGrpMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushGrpMsg& from);
  void MergeFrom(const PushGrpMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 grpid = 1;
  inline bool has_grpid() const;
  inline void clear_grpid();
  static const int kGrpidFieldNumber = 1;
  inline ::google::protobuf::uint32 grpid() const;
  inline void set_grpid(::google::protobuf::uint32 value);
  
  // required uint32 fromuin = 2;
  inline bool has_fromuin() const;
  inline void clear_fromuin();
  static const int kFromuinFieldNumber = 2;
  inline ::google::protobuf::uint32 fromuin() const;
  inline void set_fromuin(::google::protobuf::uint32 value);
  
  // required .donson.im.Msg msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::donson::im::Msg& msg() const;
  inline ::donson::im::Msg* mutable_msg();
  inline ::donson::im::Msg* release_msg();
  
  // @@protoc_insertion_point(class_scope:donson.im.PushGrpMsg)
 private:
  inline void set_has_grpid();
  inline void clear_has_grpid();
  inline void set_has_fromuin();
  inline void clear_has_fromuin();
  inline void set_has_msg();
  inline void clear_has_msg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 grpid_;
  ::google::protobuf::uint32 fromuin_;
  ::donson::im::Msg* msg_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static PushGrpMsg* default_instance_;
};
// -------------------------------------------------------------------

class ReqPushGrpMsgAck : public ::google::protobuf::Message {
 public:
  ReqPushGrpMsgAck();
  virtual ~ReqPushGrpMsgAck();
  
  ReqPushGrpMsgAck(const ReqPushGrpMsgAck& from);
  
  inline ReqPushGrpMsgAck& operator=(const ReqPushGrpMsgAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqPushGrpMsgAck& default_instance();
  
  void Swap(ReqPushGrpMsgAck* other);
  
  // implements Message ----------------------------------------------
  
  ReqPushGrpMsgAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqPushGrpMsgAck& from);
  void MergeFrom(const ReqPushGrpMsgAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 grpid = 1;
  inline bool has_grpid() const;
  inline void clear_grpid();
  static const int kGrpidFieldNumber = 1;
  inline ::google::protobuf::uint32 grpid() const;
  inline void set_grpid(::google::protobuf::uint32 value);
  
  // required uint32 msgid = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.ReqPushGrpMsgAck)
 private:
  inline void set_has_grpid();
  inline void clear_has_grpid();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 grpid_;
  ::google::protobuf::uint32 msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static ReqPushGrpMsgAck* default_instance_;
};
// -------------------------------------------------------------------

class ReqOfflineMsg : public ::google::protobuf::Message {
 public:
  ReqOfflineMsg();
  virtual ~ReqOfflineMsg();
  
  ReqOfflineMsg(const ReqOfflineMsg& from);
  
  inline ReqOfflineMsg& operator=(const ReqOfflineMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqOfflineMsg& default_instance();
  
  void Swap(ReqOfflineMsg* other);
  
  // implements Message ----------------------------------------------
  
  ReqOfflineMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqOfflineMsg& from);
  void MergeFrom(const ReqOfflineMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 msgid = 1 [default = 0];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);
  
  // optional uint32 count = 2 [default = 20];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.ReqOfflineMsg)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static ReqOfflineMsg* default_instance_;
};
// -------------------------------------------------------------------

class RspOfflineMsg : public ::google::protobuf::Message {
 public:
  RspOfflineMsg();
  virtual ~RspOfflineMsg();
  
  RspOfflineMsg(const RspOfflineMsg& from);
  
  inline RspOfflineMsg& operator=(const RspOfflineMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspOfflineMsg& default_instance();
  
  void Swap(RspOfflineMsg* other);
  
  // implements Message ----------------------------------------------
  
  RspOfflineMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspOfflineMsg& from);
  void MergeFrom(const RspOfflineMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .donson.im.PushMsg messages = 1;
  inline int messages_size() const;
  inline void clear_messages();
  static const int kMessagesFieldNumber = 1;
  inline const ::donson::im::PushMsg& messages(int index) const;
  inline ::donson::im::PushMsg* mutable_messages(int index);
  inline ::donson::im::PushMsg* add_messages();
  inline const ::google::protobuf::RepeatedPtrField< ::donson::im::PushMsg >&
      messages() const;
  inline ::google::protobuf::RepeatedPtrField< ::donson::im::PushMsg >*
      mutable_messages();
  
  // optional uint32 msgid = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);
  
  // optional uint32 readid = 3;
  inline bool has_readid() const;
  inline void clear_readid();
  static const int kReadidFieldNumber = 3;
  inline ::google::protobuf::uint32 readid() const;
  inline void set_readid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.RspOfflineMsg)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_readid();
  inline void clear_has_readid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::donson::im::PushMsg > messages_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 readid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static RspOfflineMsg* default_instance_;
};
// -------------------------------------------------------------------

class ReqNotice : public ::google::protobuf::Message {
 public:
  ReqNotice();
  virtual ~ReqNotice();
  
  ReqNotice(const ReqNotice& from);
  
  inline ReqNotice& operator=(const ReqNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqNotice& default_instance();
  
  void Swap(ReqNotice* other);
  
  // implements Message ----------------------------------------------
  
  ReqNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqNotice& from);
  void MergeFrom(const ReqNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 noticeid = 1 [default = 0];
  inline bool has_noticeid() const;
  inline void clear_noticeid();
  static const int kNoticeidFieldNumber = 1;
  inline ::google::protobuf::uint32 noticeid() const;
  inline void set_noticeid(::google::protobuf::uint32 value);
  
  // optional uint32 count = 2 [default = 5];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.ReqNotice)
 private:
  inline void set_has_noticeid();
  inline void clear_has_noticeid();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 noticeid_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static ReqNotice* default_instance_;
};
// -------------------------------------------------------------------

class RspNotice : public ::google::protobuf::Message {
 public:
  RspNotice();
  virtual ~RspNotice();
  
  RspNotice(const RspNotice& from);
  
  inline RspNotice& operator=(const RspNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspNotice& default_instance();
  
  void Swap(RspNotice* other);
  
  // implements Message ----------------------------------------------
  
  RspNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspNotice& from);
  void MergeFrom(const RspNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .donson.im.PushMsg messages = 1;
  inline int messages_size() const;
  inline void clear_messages();
  static const int kMessagesFieldNumber = 1;
  inline const ::donson::im::PushMsg& messages(int index) const;
  inline ::donson::im::PushMsg* mutable_messages(int index);
  inline ::donson::im::PushMsg* add_messages();
  inline const ::google::protobuf::RepeatedPtrField< ::donson::im::PushMsg >&
      messages() const;
  inline ::google::protobuf::RepeatedPtrField< ::donson::im::PushMsg >*
      mutable_messages();
  
  // optional uint32 noticeid = 2;
  inline bool has_noticeid() const;
  inline void clear_noticeid();
  static const int kNoticeidFieldNumber = 2;
  inline ::google::protobuf::uint32 noticeid() const;
  inline void set_noticeid(::google::protobuf::uint32 value);
  
  // optional uint32 readid = 3;
  inline bool has_readid() const;
  inline void clear_readid();
  static const int kReadidFieldNumber = 3;
  inline ::google::protobuf::uint32 readid() const;
  inline void set_readid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.RspNotice)
 private:
  inline void set_has_noticeid();
  inline void clear_has_noticeid();
  inline void set_has_readid();
  inline void clear_has_readid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::donson::im::PushMsg > messages_;
  ::google::protobuf::uint32 noticeid_;
  ::google::protobuf::uint32 readid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static RspNotice* default_instance_;
};
// -------------------------------------------------------------------

class ReqNoticeAck : public ::google::protobuf::Message {
 public:
  ReqNoticeAck();
  virtual ~ReqNoticeAck();
  
  ReqNoticeAck(const ReqNoticeAck& from);
  
  inline ReqNoticeAck& operator=(const ReqNoticeAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqNoticeAck& default_instance();
  
  void Swap(ReqNoticeAck* other);
  
  // implements Message ----------------------------------------------
  
  ReqNoticeAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqNoticeAck& from);
  void MergeFrom(const ReqNoticeAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 noticeid = 1;
  inline bool has_noticeid() const;
  inline void clear_noticeid();
  static const int kNoticeidFieldNumber = 1;
  inline ::google::protobuf::uint32 noticeid() const;
  inline void set_noticeid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.ReqNoticeAck)
 private:
  inline void set_has_noticeid();
  inline void clear_has_noticeid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 noticeid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static ReqNoticeAck* default_instance_;
};
// -------------------------------------------------------------------

class ReqCheckGrpMsg : public ::google::protobuf::Message {
 public:
  ReqCheckGrpMsg();
  virtual ~ReqCheckGrpMsg();
  
  ReqCheckGrpMsg(const ReqCheckGrpMsg& from);
  
  inline ReqCheckGrpMsg& operator=(const ReqCheckGrpMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCheckGrpMsg& default_instance();
  
  void Swap(ReqCheckGrpMsg* other);
  
  // implements Message ----------------------------------------------
  
  ReqCheckGrpMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqCheckGrpMsg& from);
  void MergeFrom(const ReqCheckGrpMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 grpid = 1;
  inline int grpid_size() const;
  inline void clear_grpid();
  static const int kGrpidFieldNumber = 1;
  inline ::google::protobuf::uint32 grpid(int index) const;
  inline void set_grpid(int index, ::google::protobuf::uint32 value);
  inline void add_grpid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      grpid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_grpid();
  
  // @@protoc_insertion_point(class_scope:donson.im.ReqCheckGrpMsg)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > grpid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static ReqCheckGrpMsg* default_instance_;
};
// -------------------------------------------------------------------

class GrpInfo : public ::google::protobuf::Message {
 public:
  GrpInfo();
  virtual ~GrpInfo();
  
  GrpInfo(const GrpInfo& from);
  
  inline GrpInfo& operator=(const GrpInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GrpInfo& default_instance();
  
  void Swap(GrpInfo* other);
  
  // implements Message ----------------------------------------------
  
  GrpInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GrpInfo& from);
  void MergeFrom(const GrpInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 grpid = 1;
  inline bool has_grpid() const;
  inline void clear_grpid();
  static const int kGrpidFieldNumber = 1;
  inline ::google::protobuf::uint32 grpid() const;
  inline void set_grpid(::google::protobuf::uint32 value);
  
  // required uint32 msgid = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);
  
  // required uint32 readid = 3;
  inline bool has_readid() const;
  inline void clear_readid();
  static const int kReadidFieldNumber = 3;
  inline ::google::protobuf::uint32 readid() const;
  inline void set_readid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.GrpInfo)
 private:
  inline void set_has_grpid();
  inline void clear_has_grpid();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_readid();
  inline void clear_has_readid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 grpid_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 readid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static GrpInfo* default_instance_;
};
// -------------------------------------------------------------------

class RspCheckGrpMsg : public ::google::protobuf::Message {
 public:
  RspCheckGrpMsg();
  virtual ~RspCheckGrpMsg();
  
  RspCheckGrpMsg(const RspCheckGrpMsg& from);
  
  inline RspCheckGrpMsg& operator=(const RspCheckGrpMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspCheckGrpMsg& default_instance();
  
  void Swap(RspCheckGrpMsg* other);
  
  // implements Message ----------------------------------------------
  
  RspCheckGrpMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspCheckGrpMsg& from);
  void MergeFrom(const RspCheckGrpMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .donson.im.GrpInfo grpinfo = 1;
  inline int grpinfo_size() const;
  inline void clear_grpinfo();
  static const int kGrpinfoFieldNumber = 1;
  inline const ::donson::im::GrpInfo& grpinfo(int index) const;
  inline ::donson::im::GrpInfo* mutable_grpinfo(int index);
  inline ::donson::im::GrpInfo* add_grpinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::donson::im::GrpInfo >&
      grpinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::donson::im::GrpInfo >*
      mutable_grpinfo();
  
  // @@protoc_insertion_point(class_scope:donson.im.RspCheckGrpMsg)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::donson::im::GrpInfo > grpinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static RspCheckGrpMsg* default_instance_;
};
// -------------------------------------------------------------------

class ReqGetGrpMsg : public ::google::protobuf::Message {
 public:
  ReqGetGrpMsg();
  virtual ~ReqGetGrpMsg();
  
  ReqGetGrpMsg(const ReqGetGrpMsg& from);
  
  inline ReqGetGrpMsg& operator=(const ReqGetGrpMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetGrpMsg& default_instance();
  
  void Swap(ReqGetGrpMsg* other);
  
  // implements Message ----------------------------------------------
  
  ReqGetGrpMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetGrpMsg& from);
  void MergeFrom(const ReqGetGrpMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 grpid = 1;
  inline bool has_grpid() const;
  inline void clear_grpid();
  static const int kGrpidFieldNumber = 1;
  inline ::google::protobuf::uint32 grpid() const;
  inline void set_grpid(::google::protobuf::uint32 value);
  
  // required uint32 msgid = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);
  
  // required uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.ReqGetGrpMsg)
 private:
  inline void set_has_grpid();
  inline void clear_has_grpid();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 grpid_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static ReqGetGrpMsg* default_instance_;
};
// -------------------------------------------------------------------

class RspGetGrpMsg : public ::google::protobuf::Message {
 public:
  RspGetGrpMsg();
  virtual ~RspGetGrpMsg();
  
  RspGetGrpMsg(const RspGetGrpMsg& from);
  
  inline RspGetGrpMsg& operator=(const RspGetGrpMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspGetGrpMsg& default_instance();
  
  void Swap(RspGetGrpMsg* other);
  
  // implements Message ----------------------------------------------
  
  RspGetGrpMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspGetGrpMsg& from);
  void MergeFrom(const RspGetGrpMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .donson.im.PushGrpMsg messages = 1;
  inline int messages_size() const;
  inline void clear_messages();
  static const int kMessagesFieldNumber = 1;
  inline const ::donson::im::PushGrpMsg& messages(int index) const;
  inline ::donson::im::PushGrpMsg* mutable_messages(int index);
  inline ::donson::im::PushGrpMsg* add_messages();
  inline const ::google::protobuf::RepeatedPtrField< ::donson::im::PushGrpMsg >&
      messages() const;
  inline ::google::protobuf::RepeatedPtrField< ::donson::im::PushGrpMsg >*
      mutable_messages();
  
  // optional uint32 msgid = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:donson.im.RspGetGrpMsg)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::donson::im::PushGrpMsg > messages_;
  ::google::protobuf::uint32 msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_donsonim_2eproto();
  friend void protobuf_AssignDesc_donsonim_2eproto();
  friend void protobuf_ShutdownFile_donsonim_2eproto();
  
  void InitAsDefaultInstance();
  static RspGetGrpMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// ReqHeader

// required uint32 uin = 1 [default = 0];
inline bool ReqHeader::has_uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqHeader::set_has_uin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqHeader::clear_has_uin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqHeader::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 ReqHeader::uin() const {
  return uin_;
}
inline void ReqHeader::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
}

// required uint32 appid = 2 [default = 0];
inline bool ReqHeader::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqHeader::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqHeader::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqHeader::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 ReqHeader::appid() const {
  return appid_;
}
inline void ReqHeader::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// required uint32 seq = 3 [default = 0];
inline bool ReqHeader::has_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqHeader::set_has_seq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqHeader::clear_has_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqHeader::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 ReqHeader::seq() const {
  return seq_;
}
inline void ReqHeader::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
}

// required uint32 ver = 4 [default = 0];
inline bool ReqHeader::has_ver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqHeader::set_has_ver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqHeader::clear_has_ver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqHeader::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
inline ::google::protobuf::uint32 ReqHeader::ver() const {
  return ver_;
}
inline void ReqHeader::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
}

// required .donson.im.Cmd cmd = 5 [default = CMD_BEGIN];
inline bool ReqHeader::has_cmd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqHeader::set_has_cmd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqHeader::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqHeader::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline donson::im::Cmd ReqHeader::cmd() const {
  return static_cast< donson::im::Cmd >(cmd_);
}
inline void ReqHeader::set_cmd(donson::im::Cmd value) {
  GOOGLE_DCHECK(donson::im::Cmd_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// -------------------------------------------------------------------

// RspHeader

// required uint32 ret = 1;
inline bool RspHeader::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspHeader::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspHeader::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspHeader::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 RspHeader::ret() const {
  return ret_;
}
inline void RspHeader::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// required string message = 2;
inline bool RspHeader::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspHeader::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspHeader::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspHeader::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& RspHeader::message() const {
  return *message_;
}
inline void RspHeader::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void RspHeader::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void RspHeader::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RspHeader::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* RspHeader::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 seq = 3;
inline bool RspHeader::has_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RspHeader::set_has_seq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RspHeader::clear_has_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RspHeader::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 RspHeader::seq() const {
  return seq_;
}
inline void RspHeader::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
}

// optional string reserved = 4;
inline bool RspHeader::has_reserved() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RspHeader::set_has_reserved() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RspHeader::clear_has_reserved() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RspHeader::clear_reserved() {
  if (reserved_ != &::google::protobuf::internal::kEmptyString) {
    reserved_->clear();
  }
  clear_has_reserved();
}
inline const ::std::string& RspHeader::reserved() const {
  return *reserved_;
}
inline void RspHeader::set_reserved(const ::std::string& value) {
  set_has_reserved();
  if (reserved_ == &::google::protobuf::internal::kEmptyString) {
    reserved_ = new ::std::string;
  }
  reserved_->assign(value);
}
inline void RspHeader::set_reserved(const char* value) {
  set_has_reserved();
  if (reserved_ == &::google::protobuf::internal::kEmptyString) {
    reserved_ = new ::std::string;
  }
  reserved_->assign(value);
}
inline void RspHeader::set_reserved(const char* value, size_t size) {
  set_has_reserved();
  if (reserved_ == &::google::protobuf::internal::kEmptyString) {
    reserved_ = new ::std::string;
  }
  reserved_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RspHeader::mutable_reserved() {
  set_has_reserved();
  if (reserved_ == &::google::protobuf::internal::kEmptyString) {
    reserved_ = new ::std::string;
  }
  return reserved_;
}
inline ::std::string* RspHeader::release_reserved() {
  clear_has_reserved();
  if (reserved_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reserved_;
    reserved_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .donson.im.Cmd cmd = 5;
inline bool RspHeader::has_cmd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RspHeader::set_has_cmd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RspHeader::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RspHeader::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline donson::im::Cmd RspHeader::cmd() const {
  return static_cast< donson::im::Cmd >(cmd_);
}
inline void RspHeader::set_cmd(donson::im::Cmd value) {
  GOOGLE_DCHECK(donson::im::Cmd_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// required uint32 isPush = 6 [default = 0];
inline bool RspHeader::has_ispush() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RspHeader::set_has_ispush() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RspHeader::clear_has_ispush() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RspHeader::clear_ispush() {
  ispush_ = 0u;
  clear_has_ispush();
}
inline ::google::protobuf::uint32 RspHeader::ispush() const {
  return ispush_;
}
inline void RspHeader::set_ispush(::google::protobuf::uint32 value) {
  set_has_ispush();
  ispush_ = value;
}

// -------------------------------------------------------------------

// ReqLogin

// required string username = 1;
inline bool ReqLogin::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqLogin::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqLogin::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqLogin::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& ReqLogin::username() const {
  return *username_;
}
inline void ReqLogin::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void ReqLogin::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void ReqLogin::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLogin::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* ReqLogin::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string password = 2;
inline bool ReqLogin::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqLogin::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqLogin::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqLogin::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& ReqLogin::password() const {
  return *password_;
}
inline void ReqLogin::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ReqLogin::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ReqLogin::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLogin::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* ReqLogin::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string devicetoken = 3;
inline bool ReqLogin::has_devicetoken() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqLogin::set_has_devicetoken() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqLogin::clear_has_devicetoken() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqLogin::clear_devicetoken() {
  if (devicetoken_ != &::google::protobuf::internal::kEmptyString) {
    devicetoken_->clear();
  }
  clear_has_devicetoken();
}
inline const ::std::string& ReqLogin::devicetoken() const {
  return *devicetoken_;
}
inline void ReqLogin::set_devicetoken(const ::std::string& value) {
  set_has_devicetoken();
  if (devicetoken_ == &::google::protobuf::internal::kEmptyString) {
    devicetoken_ = new ::std::string;
  }
  devicetoken_->assign(value);
}
inline void ReqLogin::set_devicetoken(const char* value) {
  set_has_devicetoken();
  if (devicetoken_ == &::google::protobuf::internal::kEmptyString) {
    devicetoken_ = new ::std::string;
  }
  devicetoken_->assign(value);
}
inline void ReqLogin::set_devicetoken(const char* value, size_t size) {
  set_has_devicetoken();
  if (devicetoken_ == &::google::protobuf::internal::kEmptyString) {
    devicetoken_ = new ::std::string;
  }
  devicetoken_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLogin::mutable_devicetoken() {
  set_has_devicetoken();
  if (devicetoken_ == &::google::protobuf::internal::kEmptyString) {
    devicetoken_ = new ::std::string;
  }
  return devicetoken_;
}
inline ::std::string* ReqLogin::release_devicetoken() {
  clear_has_devicetoken();
  if (devicetoken_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = devicetoken_;
    devicetoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 devicetype = 4;
inline bool ReqLogin::has_devicetype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqLogin::set_has_devicetype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqLogin::clear_has_devicetype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqLogin::clear_devicetype() {
  devicetype_ = 0u;
  clear_has_devicetype();
}
inline ::google::protobuf::uint32 ReqLogin::devicetype() const {
  return devicetype_;
}
inline void ReqLogin::set_devicetype(::google::protobuf::uint32 value) {
  set_has_devicetype();
  devicetype_ = value;
}

// -------------------------------------------------------------------

// RspLogin

// optional string token = 1;
inline bool RspLogin::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspLogin::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspLogin::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspLogin::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& RspLogin::token() const {
  return *token_;
}
inline void RspLogin::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void RspLogin::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void RspLogin::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RspLogin::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* RspLogin::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string apiresponse = 2;
inline bool RspLogin::has_apiresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspLogin::set_has_apiresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspLogin::clear_has_apiresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspLogin::clear_apiresponse() {
  if (apiresponse_ != &::google::protobuf::internal::kEmptyString) {
    apiresponse_->clear();
  }
  clear_has_apiresponse();
}
inline const ::std::string& RspLogin::apiresponse() const {
  return *apiresponse_;
}
inline void RspLogin::set_apiresponse(const ::std::string& value) {
  set_has_apiresponse();
  if (apiresponse_ == &::google::protobuf::internal::kEmptyString) {
    apiresponse_ = new ::std::string;
  }
  apiresponse_->assign(value);
}
inline void RspLogin::set_apiresponse(const char* value) {
  set_has_apiresponse();
  if (apiresponse_ == &::google::protobuf::internal::kEmptyString) {
    apiresponse_ = new ::std::string;
  }
  apiresponse_->assign(value);
}
inline void RspLogin::set_apiresponse(const char* value, size_t size) {
  set_has_apiresponse();
  if (apiresponse_ == &::google::protobuf::internal::kEmptyString) {
    apiresponse_ = new ::std::string;
  }
  apiresponse_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RspLogin::mutable_apiresponse() {
  set_has_apiresponse();
  if (apiresponse_ == &::google::protobuf::internal::kEmptyString) {
    apiresponse_ = new ::std::string;
  }
  return apiresponse_;
}
inline ::std::string* RspLogin::release_apiresponse() {
  clear_has_apiresponse();
  if (apiresponse_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = apiresponse_;
    apiresponse_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .donson.im.RspOfflineMsg msg = 3;
inline bool RspLogin::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RspLogin::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RspLogin::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RspLogin::clear_msg() {
  if (msg_ != NULL) msg_->::donson::im::RspOfflineMsg::Clear();
  clear_has_msg();
}
inline const ::donson::im::RspOfflineMsg& RspLogin::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::donson::im::RspOfflineMsg* RspLogin::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::donson::im::RspOfflineMsg;
  return msg_;
}
inline ::donson::im::RspOfflineMsg* RspLogin::release_msg() {
  clear_has_msg();
  ::donson::im::RspOfflineMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ReqHeartBeat

// required string token = 1;
inline bool ReqHeartBeat::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqHeartBeat::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqHeartBeat::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqHeartBeat::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& ReqHeartBeat::token() const {
  return *token_;
}
inline void ReqHeartBeat::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void ReqHeartBeat::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void ReqHeartBeat::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqHeartBeat::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* ReqHeartBeat::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// RspHeartBeat

// optional string token = 1;
inline bool RspHeartBeat::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspHeartBeat::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspHeartBeat::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspHeartBeat::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& RspHeartBeat::token() const {
  return *token_;
}
inline void RspHeartBeat::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void RspHeartBeat::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void RspHeartBeat::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RspHeartBeat::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* RspHeartBeat::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqReLogin

// required string token = 1;
inline bool ReqReLogin::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqReLogin::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqReLogin::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqReLogin::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& ReqReLogin::token() const {
  return *token_;
}
inline void ReqReLogin::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void ReqReLogin::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void ReqReLogin::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqReLogin::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* ReqReLogin::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// RspReLogin

// optional string token = 1;
inline bool RspReLogin::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspReLogin::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspReLogin::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspReLogin::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& RspReLogin::token() const {
  return *token_;
}
inline void RspReLogin::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void RspReLogin::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void RspReLogin::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RspReLogin::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* RspReLogin::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// RichMsg

// required .donson.im.MsgType type = 1 [default = Msg_Text];
inline bool RichMsg::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RichMsg::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RichMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RichMsg::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline donson::im::MsgType RichMsg::type() const {
  return static_cast< donson::im::MsgType >(type_);
}
inline void RichMsg::set_type(donson::im::MsgType value) {
  GOOGLE_DCHECK(donson::im::MsgType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required string msg = 2;
inline bool RichMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RichMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RichMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RichMsg::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& RichMsg::msg() const {
  return *msg_;
}
inline void RichMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void RichMsg::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void RichMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RichMsg::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* RichMsg::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Msg

// repeated .donson.im.RichMsg messages = 1;
inline int Msg::messages_size() const {
  return messages_.size();
}
inline void Msg::clear_messages() {
  messages_.Clear();
}
inline const ::donson::im::RichMsg& Msg::messages(int index) const {
  return messages_.Get(index);
}
inline ::donson::im::RichMsg* Msg::mutable_messages(int index) {
  return messages_.Mutable(index);
}
inline ::donson::im::RichMsg* Msg::add_messages() {
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::donson::im::RichMsg >&
Msg::messages() const {
  return messages_;
}
inline ::google::protobuf::RepeatedPtrField< ::donson::im::RichMsg >*
Msg::mutable_messages() {
  return &messages_;
}

// optional uint32 msgid = 2;
inline bool Msg::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 Msg::msgid() const {
  return msgid_;
}
inline void Msg::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
}

// optional uint32 time = 3;
inline bool Msg::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 Msg::time() const {
  return time_;
}
inline void Msg::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ReqUpMsg

// required uint32 touin = 1;
inline bool ReqUpMsg::has_touin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqUpMsg::set_has_touin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqUpMsg::clear_has_touin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqUpMsg::clear_touin() {
  touin_ = 0u;
  clear_has_touin();
}
inline ::google::protobuf::uint32 ReqUpMsg::touin() const {
  return touin_;
}
inline void ReqUpMsg::set_touin(::google::protobuf::uint32 value) {
  set_has_touin();
  touin_ = value;
}

// required .donson.im.Msg msg = 2;
inline bool ReqUpMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqUpMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqUpMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqUpMsg::clear_msg() {
  if (msg_ != NULL) msg_->::donson::im::Msg::Clear();
  clear_has_msg();
}
inline const ::donson::im::Msg& ReqUpMsg::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::donson::im::Msg* ReqUpMsg::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::donson::im::Msg;
  return msg_;
}
inline ::donson::im::Msg* ReqUpMsg::release_msg() {
  clear_has_msg();
  ::donson::im::Msg* temp = msg_;
  msg_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// RspUpMsg

// required uint32 msgid = 1;
inline bool RspUpMsg::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspUpMsg::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspUpMsg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspUpMsg::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 RspUpMsg::msgid() const {
  return msgid_;
}
inline void RspUpMsg::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
}

// required uint32 time = 2;
inline bool RspUpMsg::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspUpMsg::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspUpMsg::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspUpMsg::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 RspUpMsg::time() const {
  return time_;
}
inline void RspUpMsg::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// required uint32 touin = 3;
inline bool RspUpMsg::has_touin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RspUpMsg::set_has_touin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RspUpMsg::clear_has_touin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RspUpMsg::clear_touin() {
  touin_ = 0u;
  clear_has_touin();
}
inline ::google::protobuf::uint32 RspUpMsg::touin() const {
  return touin_;
}
inline void RspUpMsg::set_touin(::google::protobuf::uint32 value) {
  set_has_touin();
  touin_ = value;
}

// -------------------------------------------------------------------

// PushMsg

// required uint32 fromuin = 1;
inline bool PushMsg::has_fromuin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushMsg::set_has_fromuin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushMsg::clear_has_fromuin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushMsg::clear_fromuin() {
  fromuin_ = 0u;
  clear_has_fromuin();
}
inline ::google::protobuf::uint32 PushMsg::fromuin() const {
  return fromuin_;
}
inline void PushMsg::set_fromuin(::google::protobuf::uint32 value) {
  set_has_fromuin();
  fromuin_ = value;
}

// required .donson.im.Msg msg = 2;
inline bool PushMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PushMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PushMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PushMsg::clear_msg() {
  if (msg_ != NULL) msg_->::donson::im::Msg::Clear();
  clear_has_msg();
}
inline const ::donson::im::Msg& PushMsg::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::donson::im::Msg* PushMsg::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::donson::im::Msg;
  return msg_;
}
inline ::donson::im::Msg* PushMsg::release_msg() {
  clear_has_msg();
  ::donson::im::Msg* temp = msg_;
  msg_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ReqPushMsgAck

// required uint32 fromuin = 1;
inline bool ReqPushMsgAck::has_fromuin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqPushMsgAck::set_has_fromuin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqPushMsgAck::clear_has_fromuin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqPushMsgAck::clear_fromuin() {
  fromuin_ = 0u;
  clear_has_fromuin();
}
inline ::google::protobuf::uint32 ReqPushMsgAck::fromuin() const {
  return fromuin_;
}
inline void ReqPushMsgAck::set_fromuin(::google::protobuf::uint32 value) {
  set_has_fromuin();
  fromuin_ = value;
}

// required uint32 msgid = 2;
inline bool ReqPushMsgAck::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqPushMsgAck::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqPushMsgAck::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqPushMsgAck::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 ReqPushMsgAck::msgid() const {
  return msgid_;
}
inline void ReqPushMsgAck::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ReqUpGrpMsg

// required uint32 grpid = 1;
inline bool ReqUpGrpMsg::has_grpid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqUpGrpMsg::set_has_grpid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqUpGrpMsg::clear_has_grpid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqUpGrpMsg::clear_grpid() {
  grpid_ = 0u;
  clear_has_grpid();
}
inline ::google::protobuf::uint32 ReqUpGrpMsg::grpid() const {
  return grpid_;
}
inline void ReqUpGrpMsg::set_grpid(::google::protobuf::uint32 value) {
  set_has_grpid();
  grpid_ = value;
}

// required .donson.im.Msg msg = 2;
inline bool ReqUpGrpMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqUpGrpMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqUpGrpMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqUpGrpMsg::clear_msg() {
  if (msg_ != NULL) msg_->::donson::im::Msg::Clear();
  clear_has_msg();
}
inline const ::donson::im::Msg& ReqUpGrpMsg::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::donson::im::Msg* ReqUpGrpMsg::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::donson::im::Msg;
  return msg_;
}
inline ::donson::im::Msg* ReqUpGrpMsg::release_msg() {
  clear_has_msg();
  ::donson::im::Msg* temp = msg_;
  msg_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// RspUpGrpMsg

// required uint32 msgid = 1;
inline bool RspUpGrpMsg::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspUpGrpMsg::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspUpGrpMsg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspUpGrpMsg::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 RspUpGrpMsg::msgid() const {
  return msgid_;
}
inline void RspUpGrpMsg::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
}

// required uint32 time = 2;
inline bool RspUpGrpMsg::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspUpGrpMsg::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspUpGrpMsg::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspUpGrpMsg::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 RspUpGrpMsg::time() const {
  return time_;
}
inline void RspUpGrpMsg::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// required uint32 grpid = 3;
inline bool RspUpGrpMsg::has_grpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RspUpGrpMsg::set_has_grpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RspUpGrpMsg::clear_has_grpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RspUpGrpMsg::clear_grpid() {
  grpid_ = 0u;
  clear_has_grpid();
}
inline ::google::protobuf::uint32 RspUpGrpMsg::grpid() const {
  return grpid_;
}
inline void RspUpGrpMsg::set_grpid(::google::protobuf::uint32 value) {
  set_has_grpid();
  grpid_ = value;
}

// -------------------------------------------------------------------

// PushGrpMsg

// required uint32 grpid = 1;
inline bool PushGrpMsg::has_grpid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushGrpMsg::set_has_grpid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushGrpMsg::clear_has_grpid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushGrpMsg::clear_grpid() {
  grpid_ = 0u;
  clear_has_grpid();
}
inline ::google::protobuf::uint32 PushGrpMsg::grpid() const {
  return grpid_;
}
inline void PushGrpMsg::set_grpid(::google::protobuf::uint32 value) {
  set_has_grpid();
  grpid_ = value;
}

// required uint32 fromuin = 2;
inline bool PushGrpMsg::has_fromuin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PushGrpMsg::set_has_fromuin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PushGrpMsg::clear_has_fromuin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PushGrpMsg::clear_fromuin() {
  fromuin_ = 0u;
  clear_has_fromuin();
}
inline ::google::protobuf::uint32 PushGrpMsg::fromuin() const {
  return fromuin_;
}
inline void PushGrpMsg::set_fromuin(::google::protobuf::uint32 value) {
  set_has_fromuin();
  fromuin_ = value;
}

// required .donson.im.Msg msg = 3;
inline bool PushGrpMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PushGrpMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PushGrpMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PushGrpMsg::clear_msg() {
  if (msg_ != NULL) msg_->::donson::im::Msg::Clear();
  clear_has_msg();
}
inline const ::donson::im::Msg& PushGrpMsg::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::donson::im::Msg* PushGrpMsg::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::donson::im::Msg;
  return msg_;
}
inline ::donson::im::Msg* PushGrpMsg::release_msg() {
  clear_has_msg();
  ::donson::im::Msg* temp = msg_;
  msg_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ReqPushGrpMsgAck

// required uint32 grpid = 1;
inline bool ReqPushGrpMsgAck::has_grpid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqPushGrpMsgAck::set_has_grpid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqPushGrpMsgAck::clear_has_grpid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqPushGrpMsgAck::clear_grpid() {
  grpid_ = 0u;
  clear_has_grpid();
}
inline ::google::protobuf::uint32 ReqPushGrpMsgAck::grpid() const {
  return grpid_;
}
inline void ReqPushGrpMsgAck::set_grpid(::google::protobuf::uint32 value) {
  set_has_grpid();
  grpid_ = value;
}

// required uint32 msgid = 2;
inline bool ReqPushGrpMsgAck::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqPushGrpMsgAck::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqPushGrpMsgAck::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqPushGrpMsgAck::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 ReqPushGrpMsgAck::msgid() const {
  return msgid_;
}
inline void ReqPushGrpMsgAck::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ReqOfflineMsg

// required uint32 msgid = 1 [default = 0];
inline bool ReqOfflineMsg::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqOfflineMsg::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqOfflineMsg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqOfflineMsg::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 ReqOfflineMsg::msgid() const {
  return msgid_;
}
inline void ReqOfflineMsg::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
}

// optional uint32 count = 2 [default = 20];
inline bool ReqOfflineMsg::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqOfflineMsg::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqOfflineMsg::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqOfflineMsg::clear_count() {
  count_ = 20u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ReqOfflineMsg::count() const {
  return count_;
}
inline void ReqOfflineMsg::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// RspOfflineMsg

// repeated .donson.im.PushMsg messages = 1;
inline int RspOfflineMsg::messages_size() const {
  return messages_.size();
}
inline void RspOfflineMsg::clear_messages() {
  messages_.Clear();
}
inline const ::donson::im::PushMsg& RspOfflineMsg::messages(int index) const {
  return messages_.Get(index);
}
inline ::donson::im::PushMsg* RspOfflineMsg::mutable_messages(int index) {
  return messages_.Mutable(index);
}
inline ::donson::im::PushMsg* RspOfflineMsg::add_messages() {
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::donson::im::PushMsg >&
RspOfflineMsg::messages() const {
  return messages_;
}
inline ::google::protobuf::RepeatedPtrField< ::donson::im::PushMsg >*
RspOfflineMsg::mutable_messages() {
  return &messages_;
}

// optional uint32 msgid = 2;
inline bool RspOfflineMsg::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspOfflineMsg::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspOfflineMsg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspOfflineMsg::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 RspOfflineMsg::msgid() const {
  return msgid_;
}
inline void RspOfflineMsg::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
}

// optional uint32 readid = 3;
inline bool RspOfflineMsg::has_readid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RspOfflineMsg::set_has_readid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RspOfflineMsg::clear_has_readid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RspOfflineMsg::clear_readid() {
  readid_ = 0u;
  clear_has_readid();
}
inline ::google::protobuf::uint32 RspOfflineMsg::readid() const {
  return readid_;
}
inline void RspOfflineMsg::set_readid(::google::protobuf::uint32 value) {
  set_has_readid();
  readid_ = value;
}

// -------------------------------------------------------------------

// ReqNotice

// required uint32 noticeid = 1 [default = 0];
inline bool ReqNotice::has_noticeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqNotice::set_has_noticeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqNotice::clear_has_noticeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqNotice::clear_noticeid() {
  noticeid_ = 0u;
  clear_has_noticeid();
}
inline ::google::protobuf::uint32 ReqNotice::noticeid() const {
  return noticeid_;
}
inline void ReqNotice::set_noticeid(::google::protobuf::uint32 value) {
  set_has_noticeid();
  noticeid_ = value;
}

// optional uint32 count = 2 [default = 5];
inline bool ReqNotice::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqNotice::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqNotice::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqNotice::clear_count() {
  count_ = 5u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ReqNotice::count() const {
  return count_;
}
inline void ReqNotice::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// RspNotice

// repeated .donson.im.PushMsg messages = 1;
inline int RspNotice::messages_size() const {
  return messages_.size();
}
inline void RspNotice::clear_messages() {
  messages_.Clear();
}
inline const ::donson::im::PushMsg& RspNotice::messages(int index) const {
  return messages_.Get(index);
}
inline ::donson::im::PushMsg* RspNotice::mutable_messages(int index) {
  return messages_.Mutable(index);
}
inline ::donson::im::PushMsg* RspNotice::add_messages() {
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::donson::im::PushMsg >&
RspNotice::messages() const {
  return messages_;
}
inline ::google::protobuf::RepeatedPtrField< ::donson::im::PushMsg >*
RspNotice::mutable_messages() {
  return &messages_;
}

// optional uint32 noticeid = 2;
inline bool RspNotice::has_noticeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspNotice::set_has_noticeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspNotice::clear_has_noticeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspNotice::clear_noticeid() {
  noticeid_ = 0u;
  clear_has_noticeid();
}
inline ::google::protobuf::uint32 RspNotice::noticeid() const {
  return noticeid_;
}
inline void RspNotice::set_noticeid(::google::protobuf::uint32 value) {
  set_has_noticeid();
  noticeid_ = value;
}

// optional uint32 readid = 3;
inline bool RspNotice::has_readid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RspNotice::set_has_readid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RspNotice::clear_has_readid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RspNotice::clear_readid() {
  readid_ = 0u;
  clear_has_readid();
}
inline ::google::protobuf::uint32 RspNotice::readid() const {
  return readid_;
}
inline void RspNotice::set_readid(::google::protobuf::uint32 value) {
  set_has_readid();
  readid_ = value;
}

// -------------------------------------------------------------------

// ReqNoticeAck

// required uint32 noticeid = 1;
inline bool ReqNoticeAck::has_noticeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqNoticeAck::set_has_noticeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqNoticeAck::clear_has_noticeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqNoticeAck::clear_noticeid() {
  noticeid_ = 0u;
  clear_has_noticeid();
}
inline ::google::protobuf::uint32 ReqNoticeAck::noticeid() const {
  return noticeid_;
}
inline void ReqNoticeAck::set_noticeid(::google::protobuf::uint32 value) {
  set_has_noticeid();
  noticeid_ = value;
}

// -------------------------------------------------------------------

// ReqCheckGrpMsg

// repeated uint32 grpid = 1;
inline int ReqCheckGrpMsg::grpid_size() const {
  return grpid_.size();
}
inline void ReqCheckGrpMsg::clear_grpid() {
  grpid_.Clear();
}
inline ::google::protobuf::uint32 ReqCheckGrpMsg::grpid(int index) const {
  return grpid_.Get(index);
}
inline void ReqCheckGrpMsg::set_grpid(int index, ::google::protobuf::uint32 value) {
  grpid_.Set(index, value);
}
inline void ReqCheckGrpMsg::add_grpid(::google::protobuf::uint32 value) {
  grpid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReqCheckGrpMsg::grpid() const {
  return grpid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReqCheckGrpMsg::mutable_grpid() {
  return &grpid_;
}

// -------------------------------------------------------------------

// GrpInfo

// required uint32 grpid = 1;
inline bool GrpInfo::has_grpid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GrpInfo::set_has_grpid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GrpInfo::clear_has_grpid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GrpInfo::clear_grpid() {
  grpid_ = 0u;
  clear_has_grpid();
}
inline ::google::protobuf::uint32 GrpInfo::grpid() const {
  return grpid_;
}
inline void GrpInfo::set_grpid(::google::protobuf::uint32 value) {
  set_has_grpid();
  grpid_ = value;
}

// required uint32 msgid = 2;
inline bool GrpInfo::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GrpInfo::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GrpInfo::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GrpInfo::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 GrpInfo::msgid() const {
  return msgid_;
}
inline void GrpInfo::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
}

// required uint32 readid = 3;
inline bool GrpInfo::has_readid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GrpInfo::set_has_readid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GrpInfo::clear_has_readid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GrpInfo::clear_readid() {
  readid_ = 0u;
  clear_has_readid();
}
inline ::google::protobuf::uint32 GrpInfo::readid() const {
  return readid_;
}
inline void GrpInfo::set_readid(::google::protobuf::uint32 value) {
  set_has_readid();
  readid_ = value;
}

// -------------------------------------------------------------------

// RspCheckGrpMsg

// repeated .donson.im.GrpInfo grpinfo = 1;
inline int RspCheckGrpMsg::grpinfo_size() const {
  return grpinfo_.size();
}
inline void RspCheckGrpMsg::clear_grpinfo() {
  grpinfo_.Clear();
}
inline const ::donson::im::GrpInfo& RspCheckGrpMsg::grpinfo(int index) const {
  return grpinfo_.Get(index);
}
inline ::donson::im::GrpInfo* RspCheckGrpMsg::mutable_grpinfo(int index) {
  return grpinfo_.Mutable(index);
}
inline ::donson::im::GrpInfo* RspCheckGrpMsg::add_grpinfo() {
  return grpinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::donson::im::GrpInfo >&
RspCheckGrpMsg::grpinfo() const {
  return grpinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::donson::im::GrpInfo >*
RspCheckGrpMsg::mutable_grpinfo() {
  return &grpinfo_;
}

// -------------------------------------------------------------------

// ReqGetGrpMsg

// required uint32 grpid = 1;
inline bool ReqGetGrpMsg::has_grpid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGetGrpMsg::set_has_grpid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGetGrpMsg::clear_has_grpid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGetGrpMsg::clear_grpid() {
  grpid_ = 0u;
  clear_has_grpid();
}
inline ::google::protobuf::uint32 ReqGetGrpMsg::grpid() const {
  return grpid_;
}
inline void ReqGetGrpMsg::set_grpid(::google::protobuf::uint32 value) {
  set_has_grpid();
  grpid_ = value;
}

// required uint32 msgid = 2;
inline bool ReqGetGrpMsg::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqGetGrpMsg::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqGetGrpMsg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqGetGrpMsg::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 ReqGetGrpMsg::msgid() const {
  return msgid_;
}
inline void ReqGetGrpMsg::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
}

// required uint32 count = 3;
inline bool ReqGetGrpMsg::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqGetGrpMsg::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqGetGrpMsg::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqGetGrpMsg::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ReqGetGrpMsg::count() const {
  return count_;
}
inline void ReqGetGrpMsg::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// RspGetGrpMsg

// repeated .donson.im.PushGrpMsg messages = 1;
inline int RspGetGrpMsg::messages_size() const {
  return messages_.size();
}
inline void RspGetGrpMsg::clear_messages() {
  messages_.Clear();
}
inline const ::donson::im::PushGrpMsg& RspGetGrpMsg::messages(int index) const {
  return messages_.Get(index);
}
inline ::donson::im::PushGrpMsg* RspGetGrpMsg::mutable_messages(int index) {
  return messages_.Mutable(index);
}
inline ::donson::im::PushGrpMsg* RspGetGrpMsg::add_messages() {
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::donson::im::PushGrpMsg >&
RspGetGrpMsg::messages() const {
  return messages_;
}
inline ::google::protobuf::RepeatedPtrField< ::donson::im::PushGrpMsg >*
RspGetGrpMsg::mutable_messages() {
  return &messages_;
}

// optional uint32 msgid = 2;
inline bool RspGetGrpMsg::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspGetGrpMsg::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspGetGrpMsg::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspGetGrpMsg::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 RspGetGrpMsg::msgid() const {
  return msgid_;
}
inline void RspGetGrpMsg::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace im
}  // namespace donson

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< donson::im::Cmd>() {
  return donson::im::Cmd_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< donson::im::MsgType>() {
  return donson::im::MsgType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_donsonim_2eproto__INCLUDED
